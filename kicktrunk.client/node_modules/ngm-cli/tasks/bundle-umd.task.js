"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const npm_submodules_1 = require("npm-submodules");
const webpack_umd_config_1 = require("../models/webpack-umd.config");
const webpack = require('webpack');
// todo: move to constants and make it configurable
const bundlesDir = 'bundles';
// Configure build and output;
let lastHash = null;
const webpackOutputOptions = {
    colors: true,
    chunks: true,
    modules: false,
    reasons: false,
    chunkModules: false
};
// export function bundleUmd(dir, moduleConf, minify) {
function bundleUmd({ src, dist, name, main, tsconfig, minify }) {
    const config = webpack_umd_config_1.getWebpackConfig({
        name: !minify ? `${name}.umd` : `${name}.umd.min`,
        root: path.resolve(npm_submodules_1.ROOT, src),
        entry: path.resolve(npm_submodules_1.ROOT, src, main),
        output: path.resolve(dist, bundlesDir),
        tsconfig: tsconfig
    });
    if (minify) {
        config.plugins.unshift(new webpack.optimize.UglifyJsPlugin({
            compress: {
                warnings: false
            }
        }));
    }
    const webpackCompiler = webpack(config);
    const ProgressPlugin = require('webpack/lib/ProgressPlugin');
    webpackCompiler.apply(new ProgressPlugin({ profile: false }));
    return new Promise((resolve, reject) => {
        webpackCompiler.run((err, stats) => {
            if (err) {
                if (stats) {
                    process.stdout.write(stats.toString(webpackOutputOptions) + '\n');
                }
                return reject(err);
            }
            if (stats.hasErrors()) {
                process.stdout.write(stats.toString(webpackOutputOptions) + '\n');
            }
            return stats.hasErrors() ? reject() : resolve();
        });
    });
}
exports.bundleUmd = bundleUmd;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLXVtZC50YXNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL25nbS90YXNrcy9idW5kbGUtdW1kLnRhc2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2QkFBOEI7QUFDOUIsbURBQXNDO0FBQ3RDLHFFQUFnRTtBQUNoRSxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7QUFFbkMsbURBQW1EO0FBQ25ELE1BQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQztBQUU3Qiw4QkFBOEI7QUFDOUIsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDO0FBQ3BCLE1BQU0sb0JBQW9CLEdBQUc7SUFDM0IsTUFBTSxFQUFFLElBQUk7SUFDWixNQUFNLEVBQUUsSUFBSTtJQUNaLE9BQU8sRUFBRSxLQUFLO0lBQ2QsT0FBTyxFQUFFLEtBQUs7SUFDZCxZQUFZLEVBQUUsS0FBSztDQUNwQixDQUFDO0FBRUYsdURBQXVEO0FBQ3ZELG1CQUEwQixFQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO0lBQ2pFLE1BQU0sTUFBTSxHQUFHLHFDQUFnQixDQUFDO1FBQzlCLElBQUksRUFBRSxDQUFDLE1BQU0sR0FBRyxHQUFHLElBQUksTUFBTSxHQUFHLEdBQUcsSUFBSSxVQUFVO1FBQ2pELElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLHFCQUFJLEVBQUUsR0FBRyxDQUFDO1FBQzdCLEtBQUssRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLHFCQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQztRQUNwQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDO1FBQ3RDLFFBQVEsRUFBRSxRQUFRO0tBQ25CLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDWCxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDO1lBQ3pELFFBQVEsRUFBRTtnQkFDUixRQUFRLEVBQUUsS0FBSzthQUNoQjtTQUNGLENBQUMsQ0FBQyxDQUFDO0lBQ04sQ0FBQztJQUVELE1BQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUV4QyxNQUFNLGNBQWMsR0FBRyxPQUFPLENBQUMsNEJBQTRCLENBQUMsQ0FBQztJQUU3RCxlQUFlLENBQUMsS0FBSyxDQUFDLElBQUksY0FBYyxDQUFDLEVBQUMsT0FBTyxFQUFFLEtBQUssRUFBQyxDQUFDLENBQUMsQ0FBQztJQUU1RCxNQUFNLENBQUMsSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTTtRQUNqQyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEtBQUs7WUFDN0IsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDUixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO29CQUNWLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsb0JBQW9CLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztnQkFDcEUsQ0FBQztnQkFDRCxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUM7WUFFRCxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLG9CQUFvQixDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7WUFDcEUsQ0FBQztZQUVELE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLEdBQUcsTUFBTSxFQUFFLEdBQUcsT0FBTyxFQUFFLENBQUM7UUFDbEQsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUF2Q0QsOEJBdUNDIn0=